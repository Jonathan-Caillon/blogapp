# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["dev"]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres_test:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_ROOT_PASSWORD: test

    steps:
      - uses: actions/checkout@v2

      - name: Run backend tests
        env:
          BACKEND_PORT: 5000
          DB_TYPE: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: test
          DB_PASSWORD: test
          DB_NAME: postgres
          JWT_SECRET: secret
          JWT_TIMING: 1h

        run: |
          cd api
          npm install
          npm run test

  # This workflow contains a single job called "build"
  build-client:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # login with Docker
      - uses: docker/login-action@v1
        name: Login to Docker Hub
        with:
          # generate some credentials from Dockerhub and store them into the repo secrets
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # prepare buildx for docker
      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx

      # build an push the newly created image
      - uses: docker/build-push-action@v2
        name: Build and push
        with:
          context: ./vue-project
          file: ./vue-project/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_CLIENT_IMAGE_NAME }}:latest

  build-server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # login with Docker
      - uses: docker/login-action@v1
        name: Login to Docker Hub
        with:
          # generate some credentials from Dockerhub and store them into the repo secrets
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # prepare buildx for docker
      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx

      # build an push the newly created image
      - uses: docker/build-push-action@v2
        name: Build and push
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_SERVER_IMAGE_NAME }}:latest
